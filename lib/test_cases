

notes:
1. the provider has the same instance across the app  if not dispose
2. in riverpod, ref.onDispose will called only for provider.autoDispose
3. the provider.family will be created new instance if parameter list is changed
4. push replacement will called ref.onDispose
5. invalidate: Full reset, calls onDispose, cleans up resources, and restarts lazily.
6. refresh: Quick recompute, does not call onDispose, and keeps resources intact
7. data source file focused only on data fetching and raw error handling without worrying
   about user-friendly messages.
8. Repository file for Business logic, domain rules, and mapping
   errors to user-friendly messages.

User authentication:
    user login => save firestore => listen to firestore => get current user
    happy scenario /Done

    1. user sign in And sign up
        1. you need to handle if user does not found /done
        2. you need to handle if password is wrong   /done
        3. you need to handle if user sign up with account is already in use/done
        4. you need to handle if user sign up with email but sign in with google=> he can sign but
           the account user provider at firestore will switch from
           email&password to google provider /done
        5. you need to handle if user sign up with google but sign in with email =>
           he can sign in with google, reset his password and finally he can sign in with regular
           email and password otherwise an error message 'invalid password or email' will displayed
           /done
        6. if user is logged in or signed up successfully but the its data not saved
           on firestore => the user will not continue as usual but a message will be
           shown about it

guest-app feature Logic:
    1. the user can be a guest only if he press the skip button at
    authentication page
    2. when he as a guest whenever he startups the app he always get
    the authentication page

article views feature:
    1. when single user opens the article, we increase the number of views by one
 note: Is not best practicing  to load all the article that a lot  of them that user
       will not use so it can be lead to overloading data .so, i will get each article
       view that user visited it and cashed on this ArticleViewNotifier provider